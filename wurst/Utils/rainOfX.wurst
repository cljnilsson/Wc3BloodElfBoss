package rainOfX

import Fx
import LinkedList
import LinkedListModule
import ClosureTimers
import RegisterEvents

class RainOfX
    use LinkedListModule
    LinkedList<Fx> projectiles = new LinkedList<Fx>()
    real area = 200
    real counter = 0
    real total = 0
    real duration = 8
    vec2 pos
    construct(vec2 target)
        pos = target

    function damageArea(vec2 target)
        location loc = Location(target.x, target.y)
        group g = GetUnitsInRangeOfLocAll(area, loc)
        for unit u in g
            if u.isType(UNIT_TYPE_STRUCTURE)
                u.setLife(u.getLife() - 25)
        g.destr()

    function update()
        counter += 0.03
        total += 0.03
        if counter >= 0.45
            counter = 0
            let f = new Fx(pos.polarOffset(GetRandomDirectionDeg().asAngleDegrees(), GetRandomReal(0, area)), "Abilities\\Weapons\\ChimaeraAcidMissile\\ChimaeraAcidMissile.mdl")
            f.setZ(900)
            projectiles.push(f)
        for Fx f in projectiles
            f.setZ(f.getZ() - 20)
            if f.getZ() <= 25
                damageArea(f.getPos2())
                projectiles.remove(f)
                destroy f
        if total >= duration
            destroy this
    
    ondestroy
        for Fx f in projectiles
            destroy f
        destroy projectiles


init
    /*registerSpellEffectEvent(acidRain) ->
        new RainOfX(vec2(GetSpellTargetX(), GetSpellTargetY()))
    doPeriodically(0.03) t ->
        RainOfX current = RainOfX.first
        while current != null
            current.update()
            current = current.next*/